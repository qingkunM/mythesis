\contentsline {chapter}{摘\hspace {1em}要}{i}{section*.4}
\contentsline {chapter}{\textsf {ABSTRACT}}{iii}{section*.5}
\contentsline {chapter}{\numberline {1}绪论}{1}{chapter.1}
\contentsline {section}{\numberline {1.1}研究背景与意义}{1}{section.1.1}
\contentsline {section}{\numberline {1.2}源代码软件漏洞挖掘研究现状}{2}{section.1.2}
\contentsline {subsection}{\numberline {1.2.1}静态挖掘技术}{2}{subsection.1.2.1}
\contentsline {subsubsection}{\numberline {1.2.1.1}词/语法分析技术}{3}{subsubsection.1.2.1.1}
\contentsline {subsubsection}{\numberline {1.2.1.2}定理证明方法}{4}{subsubsection.1.2.1.2}
\contentsline {subsubsection}{\numberline {1.2.1.3}抽象解释技术}{4}{subsubsection.1.2.1.3}
\contentsline {subsubsection}{\numberline {1.2.1.4}静态符号执行技术}{4}{subsubsection.1.2.1.4}
\contentsline {subsubsection}{\numberline {1.2.1.5}模型检测技术}{5}{subsubsection.1.2.1.5}
\contentsline {subsubsection}{\numberline {1.2.1.6}基于机器学习的软件漏洞静态挖掘技术}{6}{subsubsection.1.2.1.6}
\contentsline {subsection}{\numberline {1.2.2}动态挖掘技术}{6}{subsection.1.2.2}
\contentsline {subsubsection}{\numberline {1.2.2.1}运行时监测技术}{6}{subsubsection.1.2.2.1}
\contentsline {subsubsection}{\numberline {1.2.2.2}动态符号执行技术}{7}{subsubsection.1.2.2.2}
\contentsline {subsubsection}{\numberline {1.2.2.3}模糊测试技术}{9}{subsubsection.1.2.2.3}
\contentsline {section}{\numberline {1.3}源代码软件漏洞挖掘的关键问题}{10}{section.1.3}
\contentsline {section}{\numberline {1.4}论文的研究思路与主要研究内容}{12}{section.1.4}
\contentsline {section}{\numberline {1.5}论文的组织结构}{14}{section.1.5}
\contentsline {chapter}{\numberline {2}源代码软件漏洞基础知识与常规挖掘方法}{16}{chapter.2}
\contentsline {section}{\numberline {2.1}源代码中间表示形式}{16}{section.2.1}
\contentsline {subsection}{\numberline {2.1.1}语法分析树}{16}{subsection.2.1.1}
\contentsline {subsection}{\numberline {2.1.2}抽象语法树}{16}{subsection.2.1.2}
\contentsline {subsection}{\numberline {2.1.3}控制流图}{17}{subsection.2.1.3}
\contentsline {subsection}{\numberline {2.1.4}数据流图}{18}{subsection.2.1.4}
\contentsline {section}{\numberline {2.2}源代码漏洞分类}{19}{section.2.2}
\contentsline {subsection}{\numberline {2.2.1}基于抽象语法树的源代码漏洞}{19}{subsection.2.2.1}
\contentsline {subsection}{\numberline {2.2.2}基于控制流的源代码漏洞}{20}{subsection.2.2.2}
\contentsline {subsection}{\numberline {2.2.3}基于污染传播的源代码漏洞}{21}{subsection.2.2.3}
\contentsline {section}{\numberline {2.3}符号执行}{21}{section.2.3}
\contentsline {section}{\numberline {2.4}模糊测试}{24}{section.2.4}
\contentsline {subsection}{\numberline {2.4.1}模糊测试的一般过程}{24}{subsection.2.4.1}
\contentsline {subsection}{\numberline {2.4.2}测试用例生成方法}{25}{subsection.2.4.2}
\contentsline {subsection}{\numberline {2.4.3}模糊测试框架}{26}{subsection.2.4.3}
\contentsline {section}{\numberline {2.5}本章小结}{26}{section.2.5}
\contentsline {chapter}{\numberline {3}基于程序性质图和机器学习的源代码软件漏洞挖掘方法研究}{27}{chapter.3}
\contentsline {section}{\numberline {3.1}程序性质图生成}{27}{section.3.1}
\contentsline {subsection}{\numberline {3.1.1}鲁棒的源代码中间表示生成}{28}{subsection.3.1.1}
\contentsline {subsection}{\numberline {3.1.2}程序性质图}{30}{subsection.3.1.2}
\contentsline {subsubsection}{\numberline {3.1.2.1}性质图}{31}{subsubsection.3.1.2.1}
\contentsline {subsubsection}{\numberline {3.1.2.2}抽象语法树性质图}{31}{subsubsection.3.1.2.2}
\contentsline {subsection}{\numberline {3.1.3}程序性质图的基本遍历方式}{32}{subsection.3.1.3}
\contentsline {section}{\numberline {3.2}基于程序性质图的源代码漏洞挖掘方法研究}{35}{section.3.2}
\contentsline {subsection}{\numberline {3.2.1}缓冲区溢出漏洞挖掘方法}{35}{subsection.3.2.1}
\contentsline {subsection}{\numberline {3.2.2}格式化字符串漏洞挖掘方法}{41}{subsection.3.2.2}
\contentsline {subsection}{\numberline {3.2.3}Use After Free漏洞挖掘方法}{42}{subsection.3.2.3}
\contentsline {subsection}{\numberline {3.2.4}实验结果与分析}{44}{subsection.3.2.4}
\contentsline {subsubsection}{\numberline {3.2.4.1}实验设计}{44}{subsubsection.3.2.4.1}
\contentsline {subsubsection}{\numberline {3.2.4.2}结果分析}{44}{subsubsection.3.2.4.2}
\contentsline {section}{\numberline {3.3}基于机器学习的缓冲区溢出漏洞挖掘方法研究}{46}{section.3.3}
\contentsline {subsection}{\numberline {3.3.1}基本框架}{47}{subsection.3.3.1}
\contentsline {subsection}{\numberline {3.3.2}程序静态属性与映射规则}{47}{subsection.3.3.2}
\contentsline {subsubsection}{\numberline {3.3.2.1}sink类型}{47}{subsubsection.3.3.2.1}
\contentsline {subsubsection}{\numberline {3.3.2.2}缓冲区位置}{49}{subsubsection.3.3.2.2}
\contentsline {subsubsection}{\numberline {3.3.2.3}容器}{50}{subsubsection.3.3.2.3}
\contentsline {subsubsection}{\numberline {3.3.2.4}索引/地址/长度复杂度}{50}{subsubsection.3.3.2.4}
\contentsline {subsubsection}{\numberline {3.3.2.5}边界检测}{51}{subsubsection.3.3.2.5}
\contentsline {subsubsection}{\numberline {3.3.2.6}循环/条件/函数调用深度}{53}{subsubsection.3.3.2.6}
\contentsline {subsubsection}{\numberline {3.3.2.7}输入可控}{53}{subsubsection.3.3.2.7}
\contentsline {subsection}{\numberline {3.3.3}扩展的程序性质图}{54}{subsection.3.3.3}
\contentsline {subsection}{\numberline {3.3.4}实验结果与分析}{55}{subsection.3.3.4}
\contentsline {subsubsection}{\numberline {3.3.4.1}实验设计}{55}{subsubsection.3.3.4.1}
\contentsline {subsubsection}{\numberline {3.3.4.2}结果分析}{58}{subsubsection.3.3.4.2}
\contentsline {section}{\numberline {3.4}本章小结}{60}{section.3.4}
\contentsline {chapter}{\numberline {4}结合静态程序分析的高效符号执行技术研究}{62}{chapter.4}
\contentsline {section}{\numberline {4.1}问题描述}{62}{section.4.1}
\contentsline {section}{\numberline {4.2}技术方案设计}{65}{section.4.2}
\contentsline {section}{\numberline {4.3}静态程序分析理论基础}{66}{section.4.3}
\contentsline {subsection}{\numberline {4.3.1}程序可达状态空间语义}{66}{subsection.4.3.1}
\contentsline {subsection}{\numberline {4.3.2}程序不动点语义}{67}{subsection.4.3.2}
\contentsline {section}{\numberline {4.4}基于抽象解释的静态程序分析技术研究}{68}{section.4.4}
\contentsline {subsection}{\numberline {4.4.1}抽象解释理论框架}{69}{subsection.4.4.1}
\contentsline {subsection}{\numberline {4.4.2}基于抽象解释的静态程序分析}{72}{subsection.4.4.2}
\contentsline {section}{\numberline {4.5}基于静态程序分析的高效符号执行技术研究}{74}{section.4.5}
\contentsline {subsection}{\numberline {4.5.1}核心技术思想}{74}{subsection.4.5.1}
\contentsline {subsection}{\numberline {4.5.2}高效符号执行算法}{76}{subsection.4.5.2}
\contentsline {section}{\numberline {4.6}实验结果与分析}{77}{section.4.6}
\contentsline {subsection}{\numberline {4.6.1}实验设计}{77}{subsection.4.6.1}
\contentsline {subsection}{\numberline {4.6.2}结果分析}{77}{subsection.4.6.2}
\contentsline {section}{\numberline {4.7}本章小结}{79}{section.4.7}
\contentsline {chapter}{\numberline {5}基于细粒度变异的导向模糊测试技术研究}{80}{chapter.5}
\contentsline {section}{\numberline {5.1}反馈式模糊测试技术介绍}{80}{section.5.1}
\contentsline {section}{\numberline {5.2}基本框架设计}{81}{section.5.2}
\contentsline {section}{\numberline {5.3}基于LSTM的关键字段获取与权重计算}{83}{section.5.3}
\contentsline {subsection}{\numberline {5.3.1}距离测度}{84}{subsection.5.3.1}
\contentsline {subsubsection}{\numberline {5.3.1.1}函数距离}{84}{subsubsection.5.3.1.1}
\contentsline {subsubsection}{\numberline {5.3.1.2}基本块距离}{84}{subsubsection.5.3.1.2}
\contentsline {subsubsection}{\numberline {5.3.1.3}测试用例与目标区域之间的距离}{85}{subsubsection.5.3.1.3}
\contentsline {subsection}{\numberline {5.3.2}距离的获取方式}{86}{subsection.5.3.2}
\contentsline {subsection}{\numberline {5.3.3}训练过程}{87}{subsection.5.3.3}
\contentsline {subsubsection}{\numberline {5.3.3.1}目标函数}{87}{subsubsection.5.3.3.1}
\contentsline {subsubsection}{\numberline {5.3.3.2}训练模型选择}{87}{subsubsection.5.3.3.2}
\contentsline {subsubsection}{\numberline {5.3.3.3}关键字段权重计算}{88}{subsubsection.5.3.3.3}
\contentsline {subsubsection}{\numberline {5.3.3.4}关键字段权重与程序执行路径的关系}{89}{subsubsection.5.3.3.4}
\contentsline {section}{\numberline {5.4}动态测试}{90}{section.5.4}
\contentsline {subsection}{\numberline {5.4.1}细粒度变异的测试用例生成过程}{90}{subsection.5.4.1}
\contentsline {subsection}{\numberline {5.4.2}细粒度变异能量分配策略}{90}{subsection.5.4.2}
\contentsline {section}{\numberline {5.5}实验结果与分析}{92}{section.5.5}
\contentsline {subsection}{\numberline {5.5.1}实验设计}{93}{subsection.5.5.1}
\contentsline {subsection}{\numberline {5.5.2}结果分析}{94}{subsection.5.5.2}
\contentsline {section}{\numberline {5.6}本章小节}{95}{section.5.6}
\contentsline {chapter}{\numberline {6}总结与展望}{97}{chapter.6}
\contentsline {section}{\numberline {6.1}论文主要工作总结}{97}{section.6.1}
\contentsline {section}{\numberline {6.2}工作展望}{98}{section.6.2}
\contentsline {chapter}{致谢}{99}{chapter*.66}
\contentsline {chapter}{参考文献}{100}{section*.67}
\contentsline {chapter}{作者在学期间取得的学术成果}{109}{chapter*.69}
\contentsfinish 
